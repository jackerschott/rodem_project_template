defaults:
  - _self_
  - load_predict_set: mnist

  # how to setup the correct figure size, fonts, matplotlib layout and defaults for any
  # plot according to the place where they should end up (i.e. a monitor (for testing),
  # a paper, a presentation, a thesis)
  - target: none

  # how to create any single plot
  - templates: roc_curve

  # how to obtain the data to plot, which will typically summarize a high-dimensional
  # model prediction in some way
  - prediction_summaries: rocs

# which summaries to plot? And in which two-dimensional layout will the final plots be
# in (i.e. how to distribute them across rows and columns)? Each row and column in this
# 2d-list represents a row or column in the target of the plot (e.g. a latex document),
# where each prediction summary (represented by an ID) correponds to one plot; note that
# this only affects figure size, not the final layout in the output; the actual layout
# must still be done in e.g. latex; note that each prediction summary ID should only be
# present once (you don't want the exact same plot twice anyway)
layout: [['roc_0'], ['roc_1'], ['roc_2'], ['roc_3'], ['roc_4'], ['roc_5'], ['roc_6'], ['roc_7'], ['roc_8'], ['roc_9']]

# which template do we use to plot which prediction summaries? this is a more convenient
# way to define this mapping, but it should be convertible to a
# summary_id -> template_id dictionary
summary_template_map:
  roc_curve: ['roc_0', 'roc_1', 'roc_2', 'roc_3', 'roc_4', 'roc_5', 'roc_6', 'roc_7', 'roc_8', 'roc_9']
